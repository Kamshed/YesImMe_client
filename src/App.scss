@import "util/imports";


html {
    scroll-behavior: smooth;
}

body {
    overflow: auto!important;
    padding: 0px!important;
}

h1,h2,h3,h4,h5,h6 {
    font-family: 'Roboto', sans-serif;
}
p {
    font-family: 'Open Sans', sans-serif;
}

h1 {
    font-size: 5rem;
}
h2 {
    font-size: 3rem;
}
h3 {
    font-size: 2rem;
}
h4 {
    font-size: 1.5rem;
}
h5 {
    font-size: 1rem;
}
h6 {
    font-size: 0.75rem;
}
.thin {
    font-weight: 100;
}
.bold {
    font-weight: bold;
}

@media (max-width: $breakpoint-phone) {
    h1 {
        font-size: 3rem;
    }
    h2 {
        font-size: 2rem;
    }
    h3 {
        font-size: 1.75rem;
    }
    h4 {
        font-size: 1.5rem;
    }
    h5 {
        font-size: 1.5rem;
    }
    h6 {
        font-size: 1rem;
    }
    p {
        font-size: 1.25rem;
    }
    input {
        font-size: 1.25rem;
    }
    button, .btn {
        font-size: 1.25rem;
    }
    th, td {
        font-size: 1.25rem;
    }

    /* override react-bootsrap form css */
    .modal-body {
        overflow-y: scroll;
    }
    .form-control {
        font-size: 1.5rem;
    }
    .modal-header {
        align-items: center;

        .close {
            padding: 0;
            margin: unset;
            line-height: 2rem;

            span {
                font-size: 2rem;
            }
        }
    }
}

.hide {
    display: none;
}

.flex {
    display: flex;
}
@media (max-width: $breakpoint-tablet) {
    .flex {
        flex-wrap: wrap;
    }
}

.wht {
    color: white;
}

.abs {
    position: absolute;
}

.rel {
    position: relative;
}

.abs, .rel {
    &.four {
        z-index: 4;
    }
    &.three {
        z-index: 3;
    }
    &.two {
        z-index: 2;
    }
    &.one {
        z-index: 1;
    }
    &.-one {
        z-index: -1;
    }
    &.-two {
        z-index: -2;
    }
    &.-three {
        z-index: -3;
    }
    &.-four {
        z-index: -4;
    }
}



.container {
    margin: 150px auto;
    height: 100%;
    width: 1000px;
    max-width: 90%;
}

.content {
    position: relative;
    width: 100%;
    max-width: 600px;
}

@media (max-width: $breakpoint-phone) {
    .contentSubHeader {
        font-size: 1.25rem;
    }
}

.centered {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.textCentered {
    text-align: center;
}

.blue {
    color: $blue;
    background-color: $blue;
}

.green {
    color: $green;
    background-color: $green;
}

.dark {
    color: $dark;
}

.bgDark {
    background-color: $dark;
}

.gradient {
    background-image: linear-gradient($blue, $green);
}

.noMargin {
    margin: 0;
}




/* -------------------- modal/forms -------------------- */

.modal {
    padding: 0!important;
}

@media (max-width: $breakpoint-phone) {
    .modal {
        overflow: hidden!important;
        z-index: 2001;
    }

    .modalForm {
        margin: 0;
    }
    
    .modal-content {
        border: none;
        border-radius: 0;
        height: 100vh;
    }
}

.form-1 {
    input, input:focus, textArea, textArea:focus {
        background-color: transparent;
        border: white solid 2px;
        color: white;

        &::placeholder {
            color:rgba(255, 255, 255, 0.6);
        }
    }
    .btn {
        border-width: 2px;
        font-weight: 500;
        padding: 0.25rem 0.75rem 0.5rem 0.75rem;
        @media (max-width: $breakpoint-phone) {
            font-size: 1.5rem;
        }

        &:hover {
            font-weight: 500;
            color: $blue;
        }
    }
}

input {
    border: rgb(189, 189, 189) 1px solid;
    border-radius: 0.25rem;
}

.invalid {
    border: red 1px solid;
    border-radius: 0.25rem;
}





/* -------------------- videoBG -------------------- */

.player-wrapper {
    height: 70vh;
    overflow: hidden;
    filter: brightness(0.4);
}
 
.react-player {
    position: absolute;
    width: 100%;
}

@media (max-width: $breakpoint-tablet) and (min-width: 426px) and (orientation: portrait) {

    .react-player {
        position: absolute;
        top: 0;
        right: -30%;
        height: 100%;
        width: unset;
    }
}

@media (max-width: $breakpoint-phone) and (orientation: portrait) {

    .react-player {
        position: absolute;
        top: 0;
        left: -100%;
        height: 100%;
        width: unset;
    }
}